// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@v0.2.2-esm/index.mjs";import e,{isPrimitive as i}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.2.2-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-vector-like@v0.2.2-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.2.2-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.2.2-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.2.2-esm/index.mjs";import{ndarray as d}from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-gdot@v0.2.2-esm/index.mjs";import{ndarray as l}from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-gaxpy@esm/index.mjs";import p,{ndarray as m}from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-dcopy@v0.3.0-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-dscal@v0.3.0-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-max@v0.3.0-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-exp@v0.2.4-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-expit@v0.2.3-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@v0.2.2-esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ctor@v0.2.2-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-shape2strides@v0.2.2-esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-numel@v0.2.2-esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-vind2bind@v0.2.2-esm/index.mjs";import{isPrimitive as _}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-number@esm/index.mjs";import{isPrimitive as x}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import{isPrimitive as E}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.2.2-esm/index.mjs";import{isPrimitive as R}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import T from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array-like-object@v0.2.2-esm/index.mjs";import O from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import z from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import V from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-contains@v0.2.2-esm/index.mjs";import k from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-matrix-like@v0.2.2-esm/index.mjs";import F from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-minstd-shuffle@v0.2.1-esm/index.mjs";import L from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@v0.2.3-esm/index.mjs";import P from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@v0.2.4-esm/index.mjs";import A from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ctor@esm/index.mjs";import M from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ctor@esm/index.mjs";import{ndarray as q}from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-gcopy@v0.2.1-esm/index.mjs";import S from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@esm/index.mjs";import H from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ctor@v0.2.2-esm/index.mjs";import{ndarray as N}from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-gcopy@esm/index.mjs";import W from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.2-esm/index.mjs";import B from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-contains@esm/index.mjs";import I from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@v0.2.2-esm/index.mjs";import{factory as C}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-sample@esm/index.mjs";import{factory as D}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-discrete-uniform@esm/index.mjs";import{factory as G}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import Y from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pinf@v0.2.2-esm/index.mjs";import J from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-incr-mean@esm/index.mjs";import K from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@esm/index.mjs";import Q from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-incr-meanstdev@v0.2.2-esm/index.mjs";import U from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array@v0.2.2-esm/index.mjs";import X from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-copy@v0.2.2-esm/index.mjs";import Z,{isPrimitive as $}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.2.2-esm/index.mjs";import tt from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@v0.3.0-esm/index.mjs";import{isPrimitive as et}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-number@v0.2.2-esm/index.mjs";import{isPrimitive as it}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@v0.2.2-esm/index.mjs";import st from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.2-esm/index.mjs";import{isPrimitive as rt}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.2.2-esm/index.mjs";var nt={basic:"_basicLearningRate",constant:"_constantLearningRate",invscaling:"_inverseScalingLearningRate",pegasos:"_pegasosLearningRate"},at={hinge:"_hingeLoss",log:"_logLoss",modifiedHuber:"_modifiedHuberLoss",perceptron:"_perceptronLoss",squaredHinge:"_squaredHingeLoss"};function ot(t,e){var i;return this._N=t,this._opts=e,this._scaleFactor=1,this._t=0,this._learningRateMethod=nt[e.learningRate[0]],this._lossMethod=at[e.loss],i=t,e.intercept&&(i+=1),this._weights=new v(i),this._coefficients=new b("float64",new v(i),[i],[1],0,"row-major"),this}n(ot.prototype,"_add",(function(t,e){var i=e/this._scaleFactor,s=this._weights;return l(t.shape[0],i,t.data,t.strides[0],t.offset,s,1,0),this._opts.intercept&&(s[this._N]+=i),this})),n(ot.prototype,"_basicLearningRate",(function(){return 10/(10+this._t)})),n(ot.prototype,"_constantLearningRate",(function(){return this._opts.learningRate[1]})),n(ot.prototype,"_dot",(function(t,e,i){var s=d(this._N,this._weights,1,0,t,e,i);return this._opts.intercept&&(s+=this._weights[this._N]),s*=this._scaleFactor})),n(ot.prototype,"_hingeLoss",(function(t,e){var i;return i=this[this._learningRateMethod](),this._regularize(i),e*this._dot(t.data,t.strides[0],t.offset)<1&&this._add(t,e*i),this})),n(ot.prototype,"_inverseScalingLearningRate",(function(){var t=this._opts.learningRate;return t[1]/f(this._t,t[2])})),n(ot.prototype,"_logLoss",(function(t,e){var i,s,r;return s=this[this._learningRateMethod](),this._regularize(s),r=this._dot(t.data,t.strides[0],t.offset),i=e/(1+c(e*r)),this._add(t,s*i),this})),n(ot.prototype,"_modifiedHuberLoss",(function(t,e){var i,s;return i=this[this._learningRateMethod](),this._regularize(i),(s=e*this._dot(t.data,t.strides[0],t.offset))<-1?this._add(t,4*i*e):this._add(t,i*(e-s*e)),this})),n(ot.prototype,"_pegasosLearningRate",(function(){return 1/(this._opts.lambda*this._t)})),n(ot.prototype,"_perceptronLoss",(function(t,e){var i;return i=this[this._learningRateMethod](),this._regularize(i),e*this._dot(t.data,t.strides[0],t.offset)<=0&&this._add(t,e*i),this})),n(ot.prototype,"_regularize",(function(t){var e=this._opts.lambda;return e<=0||this._scale(u(1-t*e,1e-7)),this})),n(ot.prototype,"_scale",(function(t){var e;if(t<=0)throw new RangeError(a("invalid argument. Attempting to scale a weight vector by a nonpositive value. This is likely due to too large a value of eta * lambda. Value: `%f`.",t));return(e=this._scaleFactor)<1e-11&&(h(this._N,e,this._weights,1),this._scaleFactor=1),this._scaleFactor*=t,this})),n(ot.prototype,"_squaredHingeLoss",(function(t,e){var i,s;return i=this[this._learningRateMethod](),this._regularize(i),(s=e*this._dot(t.data,t.strides[0],t.offset))<1&&this._add(t,i*(e-s*e)),this})),o(ot.prototype,"coefficients",(function(){var t=this._coefficients.data,e=this._weights;return p(e.length,e,1,t,1),h(this._N,this._scaleFactor,t,1),this._coefficients})),o(ot.prototype,"nfeatures",(function(){return this._N})),n(ot.prototype,"predict",(function(t,e){var i,s,r,n,a,o,d,l,p,m,h,u,c,f,_,x;for(s=t.data,n=t.shape,p=t.strides,h=t.offset,o=t.order,i=n.length-1,a=[],x=0;x<i;x++)a.push(n[x]);for(0===i?(u=1,r=new v(1),m=[0]):(u=y(a),r=new v(u),m=j(a,o)),f=new b("int8",r,a,m,0,o),c=this._N,l=p[i],x=0;x<u;x++)d=w(n,p,h,o,x*c,"throw"),_=this._dot(s,l,d),"label"===e?_=_>0?1:-1:"probability"===e&&(_=g(_)),0===i?f.iset(_):f.iset(x,_);return f})),n(ot.prototype,"update",(function(t,e){return this._t+=1,this[this._lossMethod](t,e)}));var dt={basic:["basic"],constant:["constant",.02],invscaling:["invscaling",.02,.5],pegasos:["pegasos"]},lt=["basic","constant","invscaling","pegasos"],pt=["hinge","log","modifiedHuber","perceptron","squaredHinge"];function mt(t,e,i){return(i?M:A)("float64",new v(t*e),[t,e],[e,1],0,"row-major")}function ht(t,e){var i,s,r,n,a,o,d,l,p,m,h;for(p=e.shape[0],m=e.shape[1],i=e.data,s=t.data,r=e.strides[0],n=e.strides[1],a=t.strides[0],o=t.strides[1],d=e.offset,l=t.offset,h=0;h<p;h++)q(m,i,n,d,s,o,l),d+=r,l+=a;return t}function ut(t,e){return(e?H:b)("float64",new S(t),[t],[1],0,"row-major")}function ct(t,e){return N(e.shape[0],e.data,e.strides[0],e.offset,t.data,t.strides[0],t.offset),t}var ft=["euclidean","correlation","cosine"],gt=["forgy","sample","kmeans++"];var vt={forgy:["forgy",1],sample:["sample",1],"kmeans++":["kmeans++",1,1]};function bt(t,e,i,s){var r,n,a,o;for(n=0,r=s,o=0;o<t;o++)n+=(a=e[r])*a,r+=i;for(n=I(n),r=s,o=0;o<t;o++)e[r]/=n;return e}function jt(t){var e,i,s,r,n,a,o;for(e=t.data,n=t.shape[0],a=t.shape[1],i=t.strides[0],s=t.strides[1],r=t.offset,o=0;o<n;o++)bt(a,e,s,r),r+=i;return t}function yt(t,e,i,s,r,n,a,o,d,l){var p,m,h,u;for(p=s,m=a,h=l,u=0;u<t;u++)e[p]=(e[p]-r[m])/o[h],p+=i,m+=n,h+=d;return e}function wt(t,e){var i,s,r,n,a,o,d;for(i=t.data,a=t.shape[0],o=t.shape[1],s=t.strides[0],r=t.strides[1],n=t.offset,d=0;d<a;d++)yt(o,i,r,n,e,2,0,e,2,1),n+=s;return t}function _t(t,e,i,s,r,n,a){var o=function(t,e,i,s,r,n,a){var o,d,l,p,m;for(o=s,d=a,p=0,m=0;m<t;m++)p+=(l=e[o]-r[d])*l,o+=i,d+=n;return I(p)}(t,e,i,s,r,n,a);return o*o}function xt(t,e,i,s,r,n,a){var o,d,l,p;for(o=s,d=a,l=0,p=0;p<t;p++)l+=e[o]*r[d],o+=i,d+=n;return l}function Et(t,e,i,s,r,n,a){var o=1-xt(t,e,i,s,r,n,a);return o*o}function Rt(t,e,i,s,r,n,a){var o=1-xt(t,e,i,s,r,n,a);return o*o}function Tt(t,e,i,s,r,n){var a,o,d,l,p;for(l=r.data,a=(d=r.strides[0])*n,o=0,p=0;p<i;p++)t[p]=e(s,l,1,o,l,1,a),o+=d;return t}function Ot(t,e,i,s,r,n,a,o,d){var l,p,m,h;for(l=Y,h=0;h<e;h++)(m=t(i,s,1,n,a,o,d))<l&&(l=m,p=h),n+=r;return p}function zt(t,e,i,s,r,n,a,o){var d,l;for(l=0;l<t;l++)d=i[r],d+=(n[o]-d)/e,i[r]=d,r+=s,o+=a;return i}function Vt(t,e,i,s,r,n){var a,o;return o=t.shape[1],function(d){void 0===a&&((a=mt(n.init[1],o,!0)).count=0);if(a.count<n.init[1]&&(N(o,d.data,d.strides[0],d.offset,a.data,a.strides[1],a.strides[0]*a.count),a.count+=1,a.count<n.init[1]))return!1;n.normalize&&("cosine"===n.metric?a=jt(a):"correlation"===n.metric&&(a=wt(a,s())));t="forgy"===n.init[0]?function(t,e,i){var s,r,n,a,o,d,l,p,m,h,u,c,f,g,v,b;for(f=t.shape[0],g=t.shape[1],r=t.data,l=t.strides[0],p=t.strides[1],h=t.offset,a=e.data,n=e.shape[0],o=e.strides[0],d=e.strides[1],c=e.offset,s=D(0,f-1,{seed:i}),m=[],v=0;v<f*g;v++)m.push(J());for(v=0;v<n;v++){for(u=g*s(),b=0;b<g;b++)m[u+b](a[c+d*b]);c+=o}for(u=0,v=0;v<f;v++){for(b=0;b<g;b++)r[h+p*b]=m[u](),u+=1;h+=l}return t}(t,a,n.seed):"sample"===n.init[0]?function(t,e,i){var s,r,n,a,o,d,l,p,h,u,c;for(h=t.shape[0],u=t.shape[1],r=t.data,d=t.strides[1],l=t.offset,n=e.data,a=e.strides[0],o=e.strides[1],s=[],c=0;c<e.shape[0];c++)s.push(c);for(p=h===s.length?s:C({seed:i,size:h,mutate:!1,replacement:!1})(s),c=0;c<h;c++)m(u,n,o,a*p[c],r,d,l);return t}(t,a,n.seed):function(t,e,i,s,r){var n,a,o,d,l,p,h,u,c,f,g,v,b,j,y,w,_,x,E,R,T,O,z,V,k,F,L,P;if(V=t.shape[0],d=t.shape[1],u=e.shape[0],v=t.data,_=t.strides[0],x=t.strides[1],E=t.offset,b=e.data,y=e.strides[0],w=e.strides[1],h=G({seed:r}),o=D({seed:h()}),h=h.normalized,g="cosine"===i?Et:"correlation"===i?Rt:_t,z=o(0,u-1),1===V)return m(d,b,w,y*z,v,x,E);for(n=[z],R=new Array(d),l=new Array(2*u),j=0,F=0;F<u;F++)l[j]=Y,l[j+1]=0,j+=2;for(p=new Array(u),L=1;L<V;L++){for(Tt(R,g,u,d,e,n[L-1]),c=0,j=0,F=0;F<u;F++)R[F]<l[j]?(l[j]=R[F],l[j+1]=L-1,c+=R[F]):c+=l[j],j+=2;for(p[0]=l[0]/c,j=2,F=1;F<u;F++)p[F]=p[F-1]+l[j]/c,j+=2;for(f=Y,T=-1,P=0;P<s;P++){for(z=-1;-1===z;)for(k=h(),F=0;F<u;F++)if(k<p[F]){z=F;break}for(c=0,a=y*z,j=0,F=0;F<u;F++)(O=g(d,b,1,y*F,b,1,a))<l[j]?c+=O:c+=l[j],j+=2;c<f&&(f=c,T=z)}n.push(T)}for(F=0;F<V;F++)m(d,b,w,y*n[F],v,x,E),E+=_;return t}(t,a,n.metric,n.init[2],n.seed);return function(t,e,i,s,r){var n,a,o,d,l,p,m,h,u,c,f;for(u=e.shape[0],n=e.shape[1],d=t.shape[0],a=e.data,l=e.strides[0],o=t.data,p=t.strides[0],h=0,f=0;f<d;f++)m=l*(c=Ot(r,u,n,a,l,0,o,1,h)),zt(n,i.get(c,0)+1,a,1,m,o,1,h),s(c,r(n,a,1,m,o,1,h)),h+=p}(a,t,e,i,r),!0}}var kt=4;function Ft(t,i){var s;if(!(this instanceof Ft))return new Ft(t,i);if(!e(t))throw new TypeError(a("invalid argument. First argument must be a positive integer. Value: `%s`.",t));if(!Z(i))throw new TypeError(a("invalid argument. Second argument must be a boolean. Value: `%s`.",i));for(this.scale=1,this.norm=0,this.intercept=i,this.nWeights=t+(this.intercept?1:0),this._data=new Array(this.nWeights),s=0;s<this.nWeights;s++)this._data[s]=0}n(Ft.prototype,"scaleTo",(function(t){var e;if(this.scale<1e-11){for(e=0;e<this.nWeights;e++)this._data[e]*=this.scale;this.scale=1}if(this.norm*=tt(t,2),!(t>0))throw new RangeError(a("unexpected error. Scaling weight vector by nonpositive value, likely due to too large value of eta * lambda. Value: `%f`.",t));this.scale*=t})),n(Ft.prototype,"add",(function(t,e){var i,s,r;for(s=0,void 0===e&&(e=1),r=0;r<t.length;r++)i=t[r]*e,s+=this._data[r]*i,this._data[r]=this._data[r]+i/this.scale;this.intercept&&(i=1*e,s+=this._data[r]*i,this._data[r]=this._data[r]+i/this.scale),this.norm+=(function(t,e){var i,s=t.length,r=0;for(i=0;i<s;i++)r+=t[i]*e[i];return r}(t,t)+(this.intercept?1:0))*tt(e,2)+2*this.scale*s})),n(Ft.prototype,"innerProduct",(function(t){var e,i=0;for(e=0;e<t.length;e++)i+=this._data[e]*t[e];return i+=this.intercept?this._data[e]:0,i*=this.scale}));var Lt=1e-7;function Pt(t,e,i){var s;e>0&&(s=1-i*e,t.scaleTo(u(s,Lt)))}function At(t,e,i,s,r,n){var a=t.innerProduct(e)-i;Pt(t,r,s),a>n?t.add(e,-s):a<-n&&t.add(e,+s)}function Mt(t,e,i,s,r){var n=i-t.innerProduct(e);Pt(t,r,s),t.add(e,s*n)}function qt(t,e,i,s,r,n){var a=t.innerProduct(e)-i;Pt(t,r,s),a>n?t.add(e,-s):a<-n?t.add(e,+s):t.add(e,-s*a)}var St={epsilon:.1,eta0:.02,intercept:!0,lambda:.001,learningRate:"basic",loss:"squaredError"};var Ht={};t(Ht,"incrBinaryClassification",(function(t,e){var o,d,l;if(!i(t))throw new TypeError(a("invalid argument. First argument must be a positive integer. Value: `%s`.",t));if(d={intercept:!0,lambda:1e-4,learningRate:dt.basic.slice(),loss:"log"},arguments.length>1&&(l=function(t,e){var i;if(!O(e))return new TypeError(a("invalid argument. Options argument must be an object. Value: `%s`.",e));if(z(e,"intercept")&&(t.intercept=e.intercept,!R(t.intercept)))return new TypeError(a("invalid option. `%s` option must be a boolean. Option: `%s`.","intercept",t.intercept));if(z(e,"lambda")&&(t.lambda=e.lambda,!_(t.lambda)))return new TypeError(a("invalid option. `%s` option must be a nonnegative number. Option: `%s`.","lambda",t.lambda));if(z(e,"learningRate")){if(!T(e.learningRate))return new TypeError(a("invalid option. `%s` option must be an array-like object. Option: `%s`.","learningRate",e.learningRate));if(i=e.learningRate[0],t.learningRate[0]=i,!V(lt,i))return new TypeError(a('invalid option. First `%s` option must be one of the following: "%s". Option: `%s`.',"learningRate",lt.join('", "'),i));if(e.learningRate.length>1&&("constant"===i||"invscaling"===i)&&(t.learningRate[1]=e.learningRate[1],!x(t.learningRate[1])))return new TypeError(a("invalid option. Second `%s` option must be a positive number. Option: `%s`.","learningRate",t.learningRate[1]));if(e.learningRate.length>2&&"invscaling"===i&&(t.learningRate[2]=e.learningRate[2],!E(t.learningRate[2])))return new TypeError(a("invalid option. Third `%s` option must be a number. Option: `%s`.","learningRate",t.learningRate[2]))}return z(e,"loss")&&(t.loss=e.loss,!V(pt,t.loss))?new TypeError(a('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"loss",pt.join('", "'),t.loss)):null}(d,e)))throw l;return o=new ot(t,d),n(p,"predict",(function(e,i){var s,n;if(!r(e))throw new TypeError(a("invalid argument. First argument must be an ndarray. Value: `%s`.",e));if((s=e.shape)[s.length-1]!==t)throw new TypeError(a("invalid argument. First argument must be an ndarray whose last dimension is of size %u. Actual size: `%u`.",t,s[s.length-1]));if(n="label",arguments.length>1){if("probability"===i){if("log"!==d.loss&&"modifiedHuber"!==d.loss)throw new Error(a('invalid argument. Second argument is incompatible with model loss function. Probability predictions are only supported when the loss function is one of the following: "%s". Model loss function: `%s`.',["log","modifiedHuber"].join('", "'),d.loss))}else if("label"!==i&&"linear"!==i)throw new TypeError(a('invalid argument. Second argument must be a string value equal to either "label", "probability", or "linear". Value: `%s`.',i));n=i}return o.predict(e,n)})),p;function p(t,e){if(0===arguments.length)return o.coefficients;if(!s(t))throw new TypeError(a("invalid argument. First argument must be a one-dimensional ndarray. Value: `%s`.",t));if(-1!==e&&1!==e)throw new TypeError(a("invalid argument. Second argument must be either +1 or -1. Value: `%s`.",e));if(t.shape[0]!==o.nfeatures)throw new TypeError(a("invalid argument. First argument must be a one-dimensional ndarray of length %u. Actual length: `%u`.",o.nfeatures,t.shape[0]));return o.update(t,e),o.coefficients}})),t(Ht,"incrkmeans",(function(){var t,e,r,o,d,l,m,h,u,c,f,g,b,j;if(k(arguments[0]))j=arguments[0].shape[0],h=arguments[0].shape[1],e=ht(e=mt(j,h,!0),arguments[0]),arguments.length>1&&(o=arguments[1],b=!0);else{if(!i(arguments[0]))throw new TypeError(a("invalid argument. First argument must either be a positive integer specifying the number of clusters or a matrix containing initial centroids. Value: `%s`.",arguments[0]));if(j=arguments[0],!i(h=arguments[1]))throw new TypeError(a("invalid argument. Argument specifying number of dimensions must be a positive integer. Value: `%s`.",h));arguments.length>2&&(o=arguments[2],b=!0)}if((c={metric:"euclidean",init:vt["kmeans++"].slice(),seed:F(),normalize:!0,copy:!0}).init[1]=j,c.init[2]=2+L(P(j)),b&&(g=function(t,e){if(!O(e))return new TypeError(a("invalid argument. Options argument must be an object. Value: `%s`.",e));if(W(e,"metric")&&(t.metric=e.metric,!B(ft,t.metric)))return new TypeError(a('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"metric",ft.join('", "'),t.metric));if(W(e,"init")){if(!T(e.init))return new TypeError(a("invalid option. `%s` option must be an array-like object. Option: `%s`.","init",e.init));if(!B(gt,e.init[0]))return new TypeError(a('invalid option. `%s` option method must be one of the following: "%s". Option: `%s`.',"init",gt.join('", "'),e.init[0]));if(t.init[0]=e.init[0],e.init.length>1&&(t.init[1]=e.init[1],!i(t.init[1])))return new TypeError(a("invalid option. First `%s` parameter option must be a positive integer. Option: `%s`.","init",t.init[1]));if(e.init.length>2&&(t.init[2]=e.init[2],!i(t.init[2])))return new TypeError(a("invalid option. Second `%s` parameter option must be a positive integer. Option: `%s`.","init",t.init[2]))}return W(e,"normalize")&&(t.normalize=e.normalize,!R(t.normalize))?new TypeError(a("invalid option. `%s` option must be a boolean. Option: `%s`.","normalize",t.normalize)):W(e,"copy")&&(t.copy=e.copy,!R(t.copy))?new TypeError(a("invalid option. `%s` option must be a boolean. Option: `%s`.","copy",t.copy)):(W(e,"seed")&&(t.seed=e.seed),null)}(c,o)))throw g;if(c.init[1]<j)throw new RangeError(a("invalid option. First `%s` parameter option must be greater than or equal to the number of clusters. Options: `%f`.","init",c.init[1]));return d=function(t,e){var i={};return i.centroids=mt(t,e,!1),i.stats=mt(t,kt,!1),i}(j,h),m=mt(j,kt,!0),t=function(t,e){var i,s;for(i=[],s=0;s<e;s++)i.push(0);return function(e,s){var r,n,a;return a=t.get(e,0)+1,t.set(e,0,a),t.set(e,1,t.get(e,1)+s),n=t.get(e,2),n+=(r=s-n)/a,i[e]+=r*(s-n),t.set(e,2,n),t.set(e,3,K(i[e]/(a-1))),t}}(m,j),"cosine"===c.metric?(u=Et,c.copy&&(l=ut(h,!0))):"correlation"===c.metric?(u=Rt,c.normalize&&(r=function(t){var e,i,s,r,n;for(e=2*(s=new v(2*t)).BYTES_PER_ELEMENT,i=[],r=0,n=0;n<t;n++)i.push(Q(new v(s.buffer,r,2))),r+=e;return function(e){var r;if(0===arguments.length)return s;for(r=0;r<t;r++)i[r](e.get(r));return s}}(h)),c.copy&&(l=ut(h,!0))):u=_t,void 0===e?(e=mt(j,h,!0),f=Vt(e,m,t,r,u,c)):ht(d.centroids,e),n(y,"seed",c.seed),n(y,"predict",(function(t,i){var n,o,d,l,p,m,g,v,b,y,w;if(arguments.length>1){if(!s(t))throw new TypeError(a("invalid argument. Output argument must be a one-dimensional ndarray. Value: `%s`.",t));b=t,v=i}else v=t;if(!k(v))throw new TypeError(a("invalid argument. Must provide a two-dimensional ndarray. Value: `%s`.",v));if(v.shape[1]!==h)throw new Error(a("invalid argument. Number of matrix columns must match centroid dimensions. Expected: `%u`. Actual: `%u`.",h,v.shape[1]));if(void 0===b)b=ut(v.shape[0],!1);else if(b.length!==v.shape[0])throw new Error(a("invalid argument. Output vector length must match the number of data points. Expected: `%u`. Actual: `%u`.",v.shape[0],b.length));if(f)return null;d=v.shape[0],c.normalize&&("cosine"===c.metric?(c.copy&&(v=ht(mt(d,h,!0),v)),v=jt(v)):"correlation"===c.metric&&(c.copy&&(v=ht(mt(d,h,!0),v)),v=wt(v,r())));for(o=e.data,m=e.strides[0],n=v.data,l=v.strides[0],p=v.strides[1],g=v.offset,w=0;w<d;w++)y=Ot(u,j,h,o,m,0,n,p,g),b.set(w,y),g+=l;return b})),y;function y(i){var n,o,g,v,b,y,w,_,x,E,R;if(0===arguments.length)return f?null:d;if(!s(_=i))throw new TypeError(a("invalid argument. Must provide a one-dimensional ndarray. Value: `%s`.",_));if(_.shape[0]!==h)throw new Error(a("invalid argument. Vector length must match centroid dimensions. Expected: `%u``. Actual: `%u``.",h,_.shape[0]));if(r&&r(_),f){if(!1===f(_))return null;f=void 0}else c.normalize&&("cosine"===c.metric?(c.copy&&(_=ct(l,_)),bt(h,_.data,_.strides[0],_.offset)):"correlation"===c.metric&&(c.copy&&(_=ct(l,_)),g=r(),yt(h,_.data,_.strides[0],_.offset,g,2,0,g,2,1))),n=e.data,b=e.strides[0],o=_.data,v=_.strides[0],y=_.offset,w=b*(R=Ot(u,j,h,n,b,0,o,v,y)),x=m.get(R,0)+1,zt(h,x,n,1,w,o,v,y),E=u(h,n,1,w,o,v,y),t(R,E);return p(e.length,e.data,1,d.centroids.data,1),p(m.length,m.data,1,d.stats.data,1),d}})),t(Ht,"incrSGDRegression",(function(t){var e,i,s,r,d,l,p;if(l=X(St),arguments.length>0&&(p=function(t,e){return st(e)?W(e,"epsilon")&&(t.epsilon=e.epsilon,!it(t.epsilon))?new TypeError(a("invalid option. `%s` option must be a positive number. Option: `%s`.","epsilon",t.epsilon)):W(e,"eta0")&&(t.eta0=e.eta0,!it(t.eta0))?new TypeError(a("invalid option. `%s` option must be a positive number. Option: `%s`.","eta0",t.eta0)):W(e,"lambda")&&(t.lambda=e.lambda,!et(t.lambda))?new TypeError(a("invalid option. `%s` option must be a nonnegative number. Option: `%s`.","lambda",t.lambda)):W(e,"learningRate")&&(t.learningRate=e.learningRate,!rt(t.learningRate))?new TypeError(a("invalid option. `%s` option must be a string. Option: `%s`.","learningRate",t.learningRate)):W(e,"loss")&&(t.loss=e.loss,!rt(t.loss))?new TypeError(a("invalid option. `%s` option must be a string. Option: `%s`.","loss",t.loss)):W(e,"intercept")&&(t.intercept=e.intercept,!$(t.intercept))?new TypeError(a("invalid option. `%s` option must be a boolean. Option: `%s`.","intercept",t.intercept)):null:new TypeError(a("invalid argument. Options argument must be an object. Value: `%s`.",e))}(l,t)))throw p;switch(s=null,l.loss){case"epsilonInsensitive":i=At;break;case"huber":i=qt;break;case"squaredError":i=Mt;break;default:throw Error(a('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"loss",["epsilonInsensitive","huber","squaredError"].join('", "'),l.loss))}function d(t,n){var o;if(!U(t))throw new TypeError(a("invalid argument. First argument must be an array. Value: `%s`.",t));if(s||(s=new Ft(t.length,l.intercept),e=l.intercept?s.nWeights-1:s.nWeights),t.length!==e)throw new TypeError(a("invalid argument. First argument must be an array of length %u. Value: `%s`.",e,t));o=r(),i(s,t,n,o,l.lambda,l.epsilon)}return r=function(t,e,i){var s,r;switch(s=1,t){case"basic":r=function(){var t=1e3/(s+1e3);return s+=1,t};break;case"constant":r=function(){return s+=1,e};break;case"pegasos":r=function(){var t=1/(i*s);return s+=1,t};break;default:throw new Error(a('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"learningRate",["basic","constant","pegasos"].join('", "'),t))}return r}(l.learningRate,l.eta0,l.lambda),o(d,"coefs",(function(){var t,e;for(t=new Array(s.nWeights),e=0;e<t.length;e++)t[e]=s._data[e]*s.scale;return t})),n(d,"predict",(function(t){if(!U(t)||t.length!==e)throw new TypeError(a("invalid argument. First argument must be an array of length %u. Value: `%s`.",e||0,t));return s.innerProduct(t)})),d}));var Nt={};t(Nt,"incr",Ht);export{Nt as default,Ht as incr};
//# sourceMappingURL=index.mjs.map
